package AnalizadorJS;
import java_cup.runtime.*;

parser code 
{:
    public String Resulto = "";   
:} 

terminal String IDENTIFICADOR, E_CADENA, DECI, ENTERO, ESPECIALES;
terminal String E_CLASS, E_CONSOLE, E_REQUIRE;
terminal String E_VAR, E_LET, E_CONST;
terminal String E_IF, E_ELSE, E_WHILE, E_DO, E_FOR, E_SWITCH, E_CASE, E_BREAK;
terminal String E_PYC, E_PUNTO, E_DOSPUNTOS, E_COMA;
terminal String E_KEYIZQ, E_KEYDER, E_CORIZQ, E_CORDER, E_PARENTESISIZQ, E_PARENTESISDER;
terminal String E_MAS, E_MENOS, E_POR, E_DIVIDIR, E_POTENCIA, E_MODULO, E_EQUALS, E_AUMENTO, E_DISMINUIR;
terminal String E_COMPARAR, E_NOEQUALS, E_MENOR, E_MAYOR, E_MENORQUE, E_MAYORQUE;
terminal String E_PREGUNTA; 
terminal String E_AND, E_OOR, E_NEGAR;
terminal String E_TRUE, E_FALSE;

non terminal ini, procesos, parametros, variable, impresion, numero, opmate;

start with ini;

ini::=E_CLASS IDENTIFICADOR E_PARENTESISIZQ E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::}
    |IDENTIFICADOR E_PARENTESISIZQ E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::}
    |IDENTIFICADOR E_PARENTESISIZQ parametros E_PARENTESISDER E_KEYIZQ proceso E_KEYDER {::}
    |E_VAR IDENTIFICADOR E_EQUALS variable {::}
    |E_LET IDENTIFICADOR E_EQUALS variable {::}
    |E_CONST IDENTIFICADOR E_EQUALS variable {::}
;

parametros::=IDENTIFICADOR {::}
          |parametros E_COMA IDENTIFICADOR {::}
;

variable::=E_CADENA E_PYC{::}
        |E_CADENA {::}
        |E_CADENAUC E_PYC {::}
        |E_CADENAUC {::}
        |ENTERO E_PYC{::}
        |ENTERO {::}
        |DECI E_PYC{::}
        |DECI {::}
        |E_TRUE E_PYC{::}
        |E_TRUE {::}
        |E_FALSE E_PYC {::}
        |E_FALSE {::}
;

procesos::=IDENTIFICADOR E_PARENTESISIZQ E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::}   //Metodos sin parametros 
        |IDENTIFICADOR E_PARENTESISIZQ parametros E_PARENTESISDER E_KEYIZQ proceso E_KEYDER {::}  //Metodo con parametros
        |E_VAR IDENTIFICADOR E_EQUALS variable {::}   //Definicion de var
        |E_LET IDENTIFICADOR E_EQUALS variable {::}   //Definicion de let
        |E_CONST IDENTIFICADOR E_EQUALS variable {::} //Definicion de const
        |E_IF E_PARENTESISIZQ condicion E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::} //If
        |E_IF E_PARENTESISIZQ condicion E_PARENTESISDER E_KEYIZQ procesos E_KEYDER E_ELSE E_KEYIZQ procesos E_KEYDER{::} //If else
        |E_IF E_PARENTESISIZQ condicion E_PARENTESISDER E_KEYIZQ procesos E_KEYDER E_ELSE E_IF E_PARENTESISIZQ condicion E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::} //if else if
        |E_FOR E_PARENTESISIZQ condicionfor E_PARENTESISDER E_KEYIZQ procesos E_KEYDER {::} //For
        |
        |E_CONSOLE E_PARENTESISIZQ impresion E_PARENTESISDER E_PYC {::}  //console.log
;

impresion::=E_CADENA {::}
           |IDENTIFICADOR {::}
           |numero {::}
           |IDENTIFiCADOR E_AUMENTO {::}
           |IDENTIFICADOR E_DISMINUIR {::}
           |E_NEGAR IDENTIFICADOR {::}
           |impresion E_MAS {::}
;

numero::=DECI {::}
       |E_MENOS DECI {::}
       |E_MENOS E_PARENTESISIZQ opmate E_PARENTESISDER {::}
       |opmate {::}
;

opmate::=E_DECI E_POTENICA E_DECI {::}
        |E_DECI E_DIVIDIR E_DECI {::}
        |E_DECI E_MODULO E_DECI {::}
        |E_DECI E_POR E_DECI {::}
        |E_DECI E_MAS E_DECI {::}
        |E_DECI E_MENOS E_DECI {::}
        |opmate E_MAS{::}
        |opmate E_MENOS{::}
        |opmate E_POR{::}
        |opmate E_DIVIDIR{::}
;